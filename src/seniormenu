#!/usr/bin/env bash

shopt -s nullglob globstar

typeit=0
ydotool_is_used=0

while [ $# -gt 0 ]; do
	case $1 in
		--menu)
			dmenu="$2"
			shift
			shift
			;;
		--dotool)
			dotool="$2"
			shift
			shift
			;;
		--type)
			typeit=1
			shift
			;;
		-h|--help)
			echo "Usage: seniormenu [--menu <dmenu-wl>] [--dotool <ydotool>] [--type] [<passwordkey1> <passwordkey2> ...]"
			exit 0
			;;
		-*,--*)
			echo "Unkown option $1\nFor help, use -h or --help"
			exit 1
			;;
		*)
			break;
			;;
	esac
done

if [ -n "$WAYLAND_DISPLAY" ]; then
	[ -z "$menu" ] && menu=dmenu-wl
	[ -z "$dotool" ] && dotool="ydotool type --file /dev/stdin" && ydotool_is_used=1
elif [ -n "$DISPLAY" ]; then
	[ -z "$menu" ] && menu=dmenu
	[ -z "$dotool" ] && dotool="xdotool type --clearmodifiers --file -"
fi

if [ -z "$menu" ] || ([ $typeit -eq 1 ] && [ -z "$dotool" ]); then
	echo "Error: No Wayland or X11 display detected" >&2
	exit 1
fi

prefix=$(senior print-dir)
password_files=$(find -L "$prefix" \( -name '.*' \) -prune -o -type f -print 2>/dev/null | sed -e "s#${prefix}/\{0,1\}"'##' -e 's#\.age##' -e 's#\\#\\\\#g' -e 's#:#\\:#g' | sort)

password=$(printf '%s\n' "$password_files" | $menu)

[ -n "$password" ] || exit

key="${1:-password}"
if [ $typeit -eq 0 ]; then
	senior show --clip --key "$key" "$password"
else
	while true; do
		senior show --key "$key" "$password" | { IFS= read -r pass; printf %s "$pass"; } | $dotool
		shift
		if [ $ydotool_is_used -eq 1 ]; then
			if [ $# -gt 0 ]; then
				key="$1" && sleep 0.1 && ydotool key 15:1 15:0
			else
				[ "$key" = "password" ] || [ "$key" = "otp" ] && sleep 0.1 && ydotool key 28:1 28:0
				break
			fi
		else
			break
		fi
	done
fi
